{"ast":null,"code":"var _jsxFileName = \"D:\\\\Car\\\\cars\\\\src\\\\App.js\";\nimport React from 'react';\nimport logo from \"./logo.svg\";\nimport './App.css';\nimport Car from './Car/Car';\n\nclass Clock extends React.Component {\n  // Специальная функция такая же как function\n  constructor(props) {\n    //Метод constructor — специальный метод, необходимый для создания и инициализации объектов, созданных, с помощью класса. \n    super(props); //Ключевое слово super используется для вызова функций, принадлежащих родителю объекта.\n\n    this.state = {\n      // Массив в объектами\n      cars: [{\n        ovnerName: 'sosi',\n        carLable: 'mazda',\n        carEngine: true,\n        carDriveMotion: true,\n        carWheels: true\n      }, {\n        ovnerName: 'da',\n        carLable: 'lada',\n        carEngine: true,\n        carDriveMotion: true,\n        carWheels: true\n      }, {\n        ovnerName: 'net',\n        carLable: 'honda',\n        carEngine: false,\n        carDriveMotion: false,\n        carWheels: false\n      }],\n      formState: {\n        ovnerName: '',\n        carLable: '',\n        accepteCheck: false,\n        lableOptions: ['1', '2', '3']\n      }\n    };\n    console.log(this.state); // Выводит заданный в скобках параметр в консоль\n\n    this.handleChange = this.handleChange.bind(this); // Используется для связки метода класса, если ссылаться на метод без (), например onChange{this.onChange}, требуется привязать метод     \n\n    this.handleSubmit = this.handleSubmit.bind(this);\n  }\n\n  handleSubmit(e) {\n    alert();\n    e.preventDefault();\n  }\n\n  handleChange() {\n    const name = event.target.name;\n    this.setState({\n      [name]: event.target.value\n    });\n  }\n\n  render() {\n    debugger;\n    return /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 58,\n        columnNumber: 7\n      }\n    }, /*#__PURE__*/React.createElement(\"h1\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 59,\n        columnNumber: 9\n      }\n    }, \"\\u041F\\u0440\\u0438\\u0432\\u0435\\u0442, \\u043C\\u0438\\u0440!\"), /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 60,\n        columnNumber: 9\n      }\n    }, this.state.cars.map(car => {\n      return /*#__PURE__*/React.createElement(Car, {\n        ovnerName: car.ovnerName,\n        carLable: car.carLable,\n        carEngine: car.carEngine,\n        carDriveMotion: car.carDriveMotion,\n        carWheels: car.carWheels,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 62,\n          columnNumber: 20\n        }\n      });\n    }), /*#__PURE__*/React.createElement(\"form\", {\n      onSubmit: this.handleSubmit,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 70,\n        columnNumber: 11\n      }\n    }, /*#__PURE__*/React.createElement(\"label\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 71,\n        columnNumber: 13\n      }\n    }, \"\\u0418\\u043C\\u044F \\u0432\\u043B\\u0430\\u0434\\u0435\\u043B\\u044C\\u0446\\u0430:\", /*#__PURE__*/React.createElement(\"input\", {\n      type: \"text\",\n      name: \"name\",\n      value: this.state.formState.ovnerName,\n      onChange: this.handleChange,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 73,\n        columnNumber: 16\n      }\n    }), /*#__PURE__*/React.createElement(\"br\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 74,\n        columnNumber: 17\n      }\n    }), \"\\u041C\\u0430\\u0440\\u043A\\u0430 \\u043C\\u0430\\u0448\\u0438\\u043D\\u044B:\", /*#__PURE__*/React.createElement(\"input\", {\n      type: \"text\",\n      name: \"lable\",\n      value: this.state.formState.carLable,\n      onChange: this.handleChange,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 75,\n        columnNumber: 16\n      }\n    })), /*#__PURE__*/React.createElement(\"input\", {\n      type: \"submit\",\n      value: \"Submit\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 77,\n        columnNumber: 13\n      }\n    }))));\n  }\n\n}\n\nexport default Clock;","map":{"version":3,"sources":["D:/Car/cars/src/App.js"],"names":["React","Car","Clock","Component","constructor","props","state","cars","ovnerName","carLable","carEngine","carDriveMotion","carWheels","formState","accepteCheck","lableOptions","console","log","handleChange","bind","handleSubmit","e","alert","preventDefault","name","event","target","setState","value","render","map","car"],"mappings":"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","sourcesContent":["import React from 'react';\nimport logo from './logo.svg';\nimport './App.css';\nimport Car from './Car/Car';\n\n\n\nclass Clock extends React.Component {       // Специальная функция такая же как function\n  constructor(props) {                      //Метод constructor — специальный метод, необходимый для создания и инициализации объектов, созданных, с помощью класса. \n    super(props);                           //Ключевое слово super используется для вызова функций, принадлежащих родителю объекта.\n    this.state = {                          // Массив в объектами\n      cars: [{\n        ovnerName: 'sosi',\n        carLable: 'mazda',\n        carEngine: true,\n        carDriveMotion: true,\n        carWheels: true\n      }, {\n        ovnerName: 'da',\n        carLable: 'lada',\n        carEngine: true,\n        carDriveMotion: true,\n        carWheels: true\n      }, {\n        ovnerName: 'net',\n        carLable: 'honda',\n        carEngine: false,\n        carDriveMotion: false,\n        carWheels: false\n      }],\n     formState: {ovnerName:'' , carLable: '', accepteCheck: false , lableOptions: ['1', '2', '3']}   \n   }; \n   console.log(this.state)                                 // Выводит заданный в скобках параметр в консоль\n   this.handleChange = this.handleChange.bind(this);       // Используется для связки метода класса, если ссылаться на метод без (), например onChange{this.onChange}, требуется привязать метод     \n   this.handleSubmit = this.handleSubmit.bind(this) \n  }\n\n\n \n  handleSubmit(e) { \n    alert()\n    e.preventDefault();\n  }\n  \n  handleChange () {\n    const name = event.target.name;\n    this.setState({[name]: event.target.value});\n  }\n\n \n\n\n\n\n  render() {                                        \n    debugger\n    return (                                        \n      <div>\n        <h1>Привет, мир!</h1>\n        <div>\n          {this.state.cars.map((car) => {           \n            return <Car\n              ovnerName={car.ovnerName}             \n              carLable={car.carLable}\n              carEngine={car.carEngine}\n              carDriveMotion={car.carDriveMotion}\n              carWheels={car.carWheels}\n            />\n          })}\n          <form  onSubmit={this.handleSubmit}>      \n            <label>\n              Имя владельца:\n               <input type=\"text\" name=\"name\" value={this.state.formState.ovnerName} onChange ={this.handleChange}/>\n                <br />Марка машины:\n               <input type=\"text\" name=\"lable\" value={this.state.formState.carLable} onChange ={this.handleChange} />\n            </label>\n            <input type=\"submit\" value=\"Submit\" />\n          </form>\n\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default Clock;\n\n\n\n\n\n"]},"metadata":{},"sourceType":"module"}