{"version":3,"sources":["Car/Car.jsx","App.js","serviceWorker.js","index.js"],"names":["Car","props","state","ovnerName","carLable","carEngine","carDriveMotion","carWheels","carPusk","bind","carEngineOff","carDriveEffect","carStop","e","preventDefault","this","setState","className","onClick","React","Component","addCar","handleDeliteCar","index","del","cars","filter","item","id","Math","random","toString","formState","lableOptions","accepteCheck","handleChangeName","handleSubmit","handleChangeCarLable","handleCheckboxChange","newCar","console","log","val","target","value","prevState","map","car","key","onSubmit","type","name","onChange","placeholder","lable","href","disabled","Boolean","window","location","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","message"],"mappings":"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","file":"static/js/main.4def9c73.chunk.js","sourcesContent":["import React from 'react';\r\nimport './Car.css';\r\n\r\n\r\n\r\n\r\nclass Car extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            ovnerName: this.props.ovnerName || 'default',\r\n            carLable: this.props.carLable || 'stock',\r\n            carEngine: this.props.carEngine || false,\r\n            carDriveMotion: this.props.carDriveMotion || false,\r\n            carWheels: this.props.carWheels || false  \r\n        };\r\n        this.carPusk = this.carPusk.bind(this)\r\n        this.carEngineOff = this.carEngineOff.bind(this)\r\n        this.carDriveEffect = this.carDriveEffect.bind(this)\r\n        this.carStop = this.carStop.bind(this)\r\n    }\r\n\r\n\r\n    carPusk(e) {\r\n     e.preventDefault();\r\n        this.setState(state => ({\r\n         carEngine: true}));\r\n    }\r\n\r\n    carEngineOff(e) {\r\n     e.preventDefault();\r\n        this.setState(state => ({\r\n        carEngine: false, carDriveMotion: false, carWheels: false }));\r\n    }\r\n    carDriveEffect(e) {\r\n     e.preventDefault();\r\n     if (this.state.carEngine === true) {\r\n        this.setState(state => ({\r\n            carDriveMotion: true, carWheels: true}));\r\n      } \r\n    }\r\n\r\n    carStop(e) {\r\n        e.preventDefault();\r\n        this.setState(state => ({\r\n          carDriveMotion: false, carWheels: false}));   \r\n       }\r\n\r\n    render() {\r\n        return (\r\n            <div className='main_claasOfCar'>\r\n                <div className='car_text_status'>{this.state.ovnerName}                            </div>\r\n                <div className='car_text_status'>{this.state.carLable}                             </div>\r\n                <div className='car_text_status'>{this.state.carEngine ? 'Заведен':'Заглушен'}     </div>\r\n                <div className='car_text_status'>{this.state.carDriveMotion ? 'Едет':'Стоит'}      </div>\r\n                <div className='car_text_status'>{this.state.carWheels ? 'Крутятся' : 'Не крутятся'}</div>\r\n                <button onClick={this.carPusk} className='button_car'>Завести                    </button>\r\n                <button onClick={this.carEngineOff} className='button_car'>Заглушить             </button>\r\n                <button onClick={this.carDriveEffect} className='button_car'>Поехать             </button>\r\n                <button onClick={this.carStop} className='button_car'>Остановиться               </button>\r\n                <button onClick={this.props.onClick} className='button_car'>CRASH IT             </button>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\n\r\n\r\n\r\n\r\nexport default Car;\r\n\r\n\r\n\r\n","import React from 'react';\nimport './App.css';\nimport Car from './Car/Car';\n\n\n\n\nclass addCar extends React.Component {       // Специальная функция такая же как function\n  constructor(props) {                      //Метод constructor — специальный метод, необходимый для создания и инициализации объектов, созданных, с помощью класса. \n    super(props);                           //Ключевое слово super используется для вызова функций, принадлежащих родителю объекта.\n    this.state = {                          // Массив в объектами\n      cars: [{\n        id: `f${(~~(Math.random() * 1e8)).toString(16)}`,\n        ovnerName: 'sosi',\n        carLable: 'mazda',\n        carEngine: true,\n        carDriveMotion: true,\n        carWheels: true\n      }, {\n        id: `f${(~~(Math.random() * 1e8)).toString(16)}`,\n        ovnerName: 'da',\n        carLable: 'lada',\n        carEngine: true,\n        carDriveMotion: true,\n        carWheels: true\n      }, {\n        id: `f${(~~(Math.random() * 1e8)).toString(16)}`,\n        ovnerName: 'net',\n        carLable: 'honda',\n        carEngine: false,\n        carDriveMotion: false,\n        carWheels: false\n      }],\n      formState: { id: '', ovnerName: '', carLable: 'Stock', lableOptions: ['', 'Mazda', 'Vesta', 'Shoha'], accepteCheck: true }\n    };\n\n    this.handleChangeName = this.handleChangeName.bind(this);\n    this.handleSubmit = this.handleSubmit.bind(this)\n    this.handleChangeCarLable = this.handleChangeCarLable.bind(this)\n    this.handleCheckboxChange = this.handleCheckboxChange.bind(this)\n    this.handleDeliteCar = this.handleDeliteCar.bind(this)\n  }\n\n\n\n  handleSubmit(e) {\n    var newCar = {\n      id: `f${(~~(Math.random() * 1e8)).toString(16)}`,\n      ovnerName: this.state.formState.ovnerName,\n      carLable: this.state.formState.carLable,\n      carEngine: false,\n      carDriveMotion: false,\n      carWheels: false\n    }\n\n    e.preventDefault();\n    this.setState(state => ({\n      cars: [...this.state.cars, newCar]\n    }))\n    console.log(this.state)\n  }\n\n  handleChangeName(e) {\n    e.preventDefault();\n    var val = e.target.value;\n    this.setState(prevState => ({\n      formState:\n      {\n        ...prevState.formState, ovnerName: val\n      }\n    }))\n  }\n\n  handleChangeCarLable(e) {\n    e.preventDefault();\n    var val = e.target.value;\n    this.setState(prevState => ({\n      formState:\n      {\n        ...prevState.formState, carLable: val\n      }\n    }))\n  }\n\n  handleCheckboxChange(e) {\n    this.setState(prevState => ({\n      formState:\n      {\n        ...prevState.formState, accepteCheck: !this.state.formState.accepteCheck\n      }\n    }))\n  }\n\n  handleDeliteCar = (index) => {\n    var del = this.state.cars;\n    del = del.filter(item => item.id !== index);\n    this.setState({\n      cars: del\n    })\n  }\n\n\n\n  render() {\n    return (\n      <div>\n        <h1>Привет, мир!</h1>\n        <div>\n          {this.state.cars.map((car, index) => {\n            return <Car\n              key={car.id}\n              onClick={() => this.handleDeliteCar(car.id)}\n              ovnerName={car.ovnerName}\n              carLable={car.carLable}\n              carEngine={car.carEngine}\n              carDriveMotion={car.carDriveMotion}\n              carWheels={car.carWheels}\n            />\n          })}\n          <div>\n            <form onSubmit={this.handleSubmit} className='car_form'>\n              <label>\n                Имя владельца:\n       <input type=\"text\" name=\"ovnerName\" value={this.state.formState.ovnerName} onChange={this.handleChangeName} />\n                <br />Марка машины:\n        <select onChange={this.handleChangeCarLable} placeholder='pick em' value={this.state.formState.carLable}>\n                  {this.state.formState.lableOptions.map((lable, index) => {\n                    return <option key={index} value={lable}>{lable}</option>\n                  })}\n                </select>\n                <br />\n                <input type=\"checkbox\" onChange={this.handleCheckboxChange} />\n                <span>Согласен с <a href=''>правилами сервиса</a></span>\n              </label>\n              <input type=\"submit\" value=\"Submit\" id='submit' disabled={this.state.formState.accepteCheck} />\n            </form>\n          </div>\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default addCar;\n\n\n\n\n\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}